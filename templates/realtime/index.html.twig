{% extends 'base.html.twig' %}
{% block title %}Realtime Test{% endblock %}
{% block body %}
  <div style="max-width:760px;margin:2rem auto;font-family:system-ui">
    <h1>Realtime Test (Mercure)</h1>
    <p>Topic: <code>{{ topic }}</code></p>
    <button id="publishBtn">Publish from server</button>
    <pre id="log" style="background:#111;color:#0f0;padding:1rem;min-height:200px;overflow:auto;"></pre>
  </div>

  <script>
  (function() {
    const topic = '{{ topic }}'; // raw topic
    const hubUrl = 'http://127.0.0.1:8080/.well-known/mercure';
    const urlObj = new URL(hubUrl);
    urlObj.searchParams.append('topic', topic);
    const url = urlObj.toString();

    const log = (msg) => {
      const el = document.getElementById('log');
      el.textContent += msg + "\n";
    };

    // Step 1: request subscriber JWT cookie
    fetch('{{ path("app_realtime_auth") }}', { credentials: 'include' })
      .then(() => {
        // Step 2: connect with credentials so the cookie is sent
        const sse = new EventSource(url, { withCredentials: true });
        sse.onopen = () => log('[SSE] connected (private).');
        sse.onerror = (e) => { log('[SSE] error'); console.log('SSE error event:', e); };
        sse.onmessage = (e) => log('[MSG] ' + e.data);
      })
      .catch(err => { log('[AUTH ERROR] ' + err); });

    document.getElementById('publishBtn').addEventListener('click', () => {
      fetch('{{ path("app_realtime_publish") }}')
        .then(r => r.text())
        .then(t => log('[HTTP] ' + t))
        .catch(err => log('[HTTP ERROR] ' + err));
    });
  })();
  </script>
{% endblock %}
