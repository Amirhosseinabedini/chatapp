{% extends 'base.html.twig' %}

{% block title %}Edit Profile{% endblock %}

{% block body %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card profile-card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-edit me-2"></i>Edit Profile
                    </h4>
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        <!-- Current Avatar -->
                        <div class="text-center mb-4">
                            <h6>Current Avatar:</h6>
                            {% if user.avatar %}
                                <img src="{{ user.avatar }}" alt="Current Avatar" class="profile-avatar">
                            {% else %}
                                <div class="profile-avatar bg-secondary d-flex align-items-center justify-content-center">
                                    <i class="fas fa-user fa-3x text-white"></i>
                                </div>
                            {% endif %}
                        </div>
                        
                        <!-- Display Name -->
                        <div class="mb-3">
                            <label for="display_name" class="form-label">
                                <i class="fas fa-user me-2"></i>Display Name
                            </label>
                            <input type="text" 
                                   class="form-control" 
                                   id="display_name" 
                                   name="display_name" 
                                   value="{{ user.displayName ?: '' }}"
                                   placeholder="Enter your display name">
                            <div class="form-text">This name will be shown to other users instead of your email.</div>
                        </div>
                        
                        <!-- Avatar Upload -->
                        <div class="mb-4">
                            <label for="avatar" class="form-label">
                                <i class="fas fa-image me-2"></i>Avatar
                            </label>
                            <input type="file" 
                                   class="form-control" 
                                   id="avatar" 
                                   name="avatar" 
                                   accept="image/*"
                                   onchange="previewAvatar(this)">
                            <div class="form-text">
                                Upload a profile picture (JPEG, PNG, GIF, or WebP). Max size: 2MB.
                            </div>
                            
                            <!-- Avatar Preview -->
                            <div id="avatarPreview" class="mt-3" style="display: none;">
                                <h6>Preview:</h6>
                                <img id="previewImage" src="" alt="Preview" class="profile-avatar">
                            </div>
                        </div>
                        
                        <!-- Submit Buttons -->
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                            <a href="{{ path('app_profile_index') }}" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function previewAvatar(input) {
    const preview = document.getElementById('avatarPreview');
    const previewImage = document.getElementById('previewImage');
    
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            previewImage.src = e.target.result;
            preview.style.display = 'block';
        };
        
        reader.readAsDataURL(input.files[0]);
        
        // Validate file size
        const file = input.files[0];
        if (file.size > 2 * 1024 * 1024) { // 2MB
            alert('File size must be less than 2MB');
            input.value = '';
            preview.style.display = 'none';
            return;
        }
        
        // Validate file type
        const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
        if (!allowedTypes.includes(file.type)) {
            alert('Only JPEG, PNG, GIF, and WebP images are allowed');
            input.value = '';
            preview.style.display = 'none';
            return;
        }
    } else {
        preview.style.display = 'none';
    }
}

// Auto-resize textarea
document.addEventListener('DOMContentLoaded', function() {
    const textareas = document.querySelectorAll('textarea');
    textareas.forEach(textarea => {
        textarea.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        });
    });
});
</script>
{% endblock %}

